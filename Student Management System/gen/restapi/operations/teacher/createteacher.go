// Code generated by go-swagger; DO NOT EDIT.

package teacher

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// CreateteacherHandlerFunc turns a function with the right signature into a createteacher handler
type CreateteacherHandlerFunc func(CreateteacherParams) middleware.Responder

// Handle executing the request and returning a response
func (fn CreateteacherHandlerFunc) Handle(params CreateteacherParams) middleware.Responder {
	return fn(params)
}

// CreateteacherHandler interface for that can handle valid createteacher params
type CreateteacherHandler interface {
	Handle(CreateteacherParams) middleware.Responder
}

// NewCreateteacher creates a new http.Handler for the createteacher operation
func NewCreateteacher(ctx *middleware.Context, handler CreateteacherHandler) *Createteacher {
	return &Createteacher{Context: ctx, Handler: handler}
}

/* Createteacher swagger:route POST /Teacher/create Teacher createteacher

Create new account for teacher

Create a new account for the teacher

*/
type Createteacher struct {
	Context *middleware.Context
	Handler CreateteacherHandler
}

func (o *Createteacher) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewCreateteacherParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
