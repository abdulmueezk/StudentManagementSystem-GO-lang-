// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "This Student Management System UI for Assestment Task By WanClouds.",
    "title": "SMS By GOlang",
    "contact": {
      "email": "abdulmueez@wanclouds.net"
    },
    "version": "1.0.0"
  },
  "host": "sms.swagger.io",
  "basePath": "/v2",
  "paths": {
    "/Student/deleterecoard/{email}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Student"
        ],
        "summary": "Delete student recoard",
        "operationId": "deletestudent",
        "parameters": [
          {
            "type": "string",
            "description": "email of student that needs to delete the recoard",
            "name": "email",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid email supplied"
          },
          "404": {
            "description": "email not found"
          }
        }
      }
    },
    "/Student/getrecoard/{email}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Student"
        ],
        "summary": "Get student recoard",
        "operationId": "getstudentByName",
        "parameters": [
          {
            "type": "string",
            "description": "The email that needs to be fetched student record ",
            "name": "email",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/student"
            }
          },
          "400": {
            "description": "Invalid email supplied"
          },
          "404": {
            "description": "email not found"
          }
        }
      }
    },
    "/Student/newstudent/add": {
      "post": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Student"
        ],
        "summary": "Add student recoard",
        "operationId": "createstudent",
        "parameters": [
          {
            "description": "Created student recoard",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/student"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid email exisit"
          },
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/Student/updaterecoard/{email}": {
      "put": {
        "description": "Enter the valid email to update the student recoard",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Student"
        ],
        "summary": "Updated student recoard",
        "operationId": "updatestudent",
        "parameters": [
          {
            "type": "string",
            "description": "email of student that needs to update the recoard",
            "name": "email",
            "in": "path",
            "required": true
          },
          {
            "description": "Updated student record",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/student"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid email supplied"
          },
          "404": {
            "description": "emai not found"
          }
        }
      }
    },
    "/Teacher/create": {
      "post": {
        "description": "Create a new account for the teacher",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Teacher"
        ],
        "summary": "Create new account for teacher",
        "operationId": "createteacher",
        "parameters": [
          {
            "description": "Created teacher account",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/teacher"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/Teacher/login/{email}/{password}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Teacher"
        ],
        "summary": "Teacher login into the portal",
        "operationId": "loginUser",
        "parameters": [
          {
            "type": "string",
            "description": "teacher email for login",
            "name": "email",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "teacher password for login",
            "name": "password",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid email/password supplied"
          }
        }
      }
    }
  },
  "definitions": {
    "student": {
      "type": "object",
      "required": [
        "email"
      ],
      "properties": {
        "age": {
          "type": "string",
          "example": "25"
        },
        "city": {
          "type": "string",
          "example": "Bahawalpur"
        },
        "class": {
          "type": "string",
          "example": "BSCS"
        },
        "email": {
          "type": "string",
          "format": "email",
          "example": "abdulmueez@wanclouds.net"
        },
        "name": {
          "type": "string",
          "example": "Mueez Khan"
        },
        "subject": {
          "type": "string",
          "example": "Golang"
        }
      }
    },
    "teacher": {
      "type": "object",
      "required": [
        "name",
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string",
          "format": "email"
        },
        "name": {
          "type": "string",
          "example": "Mueez Khan"
        },
        "password": {
          "type": "string",
          "format": "password"
        }
      }
    }
  },
  "tags": [
    {
      "name": "Teacher"
    },
    {
      "name": "Student"
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "This Student Management System UI for Assestment Task By WanClouds.",
    "title": "SMS By GOlang",
    "contact": {
      "email": "abdulmueez@wanclouds.net"
    },
    "version": "1.0.0"
  },
  "host": "sms.swagger.io",
  "basePath": "/v2",
  "paths": {
    "/Student/deleterecoard/{email}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Student"
        ],
        "summary": "Delete student recoard",
        "operationId": "deletestudent",
        "parameters": [
          {
            "type": "string",
            "description": "email of student that needs to delete the recoard",
            "name": "email",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid email supplied"
          },
          "404": {
            "description": "email not found"
          }
        }
      }
    },
    "/Student/getrecoard/{email}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Student"
        ],
        "summary": "Get student recoard",
        "operationId": "getstudentByName",
        "parameters": [
          {
            "type": "string",
            "description": "The email that needs to be fetched student record ",
            "name": "email",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/student"
            }
          },
          "400": {
            "description": "Invalid email supplied"
          },
          "404": {
            "description": "email not found"
          }
        }
      }
    },
    "/Student/newstudent/add": {
      "post": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Student"
        ],
        "summary": "Add student recoard",
        "operationId": "createstudent",
        "parameters": [
          {
            "description": "Created student recoard",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/student"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid email exisit"
          },
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/Student/updaterecoard/{email}": {
      "put": {
        "description": "Enter the valid email to update the student recoard",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Student"
        ],
        "summary": "Updated student recoard",
        "operationId": "updatestudent",
        "parameters": [
          {
            "type": "string",
            "description": "email of student that needs to update the recoard",
            "name": "email",
            "in": "path",
            "required": true
          },
          {
            "description": "Updated student record",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/student"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid email supplied"
          },
          "404": {
            "description": "emai not found"
          }
        }
      }
    },
    "/Teacher/create": {
      "post": {
        "description": "Create a new account for the teacher",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Teacher"
        ],
        "summary": "Create new account for teacher",
        "operationId": "createteacher",
        "parameters": [
          {
            "description": "Created teacher account",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/teacher"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/Teacher/login/{email}/{password}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Teacher"
        ],
        "summary": "Teacher login into the portal",
        "operationId": "loginUser",
        "parameters": [
          {
            "type": "string",
            "description": "teacher email for login",
            "name": "email",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "teacher password for login",
            "name": "password",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid email/password supplied"
          }
        }
      }
    }
  },
  "definitions": {
    "student": {
      "type": "object",
      "required": [
        "email"
      ],
      "properties": {
        "age": {
          "type": "string",
          "example": "25"
        },
        "city": {
          "type": "string",
          "example": "Bahawalpur"
        },
        "class": {
          "type": "string",
          "example": "BSCS"
        },
        "email": {
          "type": "string",
          "format": "email",
          "example": "abdulmueez@wanclouds.net"
        },
        "name": {
          "type": "string",
          "example": "Mueez Khan"
        },
        "subject": {
          "type": "string",
          "example": "Golang"
        }
      }
    },
    "teacher": {
      "type": "object",
      "required": [
        "name",
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string",
          "format": "email"
        },
        "name": {
          "type": "string",
          "example": "Mueez Khan"
        },
        "password": {
          "type": "string",
          "format": "password"
        }
      }
    }
  },
  "tags": [
    {
      "name": "Teacher"
    },
    {
      "name": "Student"
    }
  ]
}`))
}
